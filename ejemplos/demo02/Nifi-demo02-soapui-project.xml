<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="17a378a1-9ea7-4059-b402-2cd56ea5277d" activeEnvironment="Default" name="Nifi demo02" resourceRoot="" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:restMockService id="04a4d833-a83a-499c-b25b-19558e1fc680" port="9800" path="/nomina" host="localhost" name="consultaSalarioEmpleado" docroot=""><con:settings/><con:properties/><con:afterRequestScript/><con:restMockAction name="/salario" method="GET" resourcePath="/salario" id="0815ac7b-fe34-40b4-803c-a7d6964987f4"><con:settings/><con:defaultResponse>Sueldo operador</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path

def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("Operador") )
{
    // return the name of the response you want to dispatch
    return "Response 1"
}
                                                    


*/
// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

def timeout = 2000 // in milliseconds
Thread.sleep(timeout)

if( queryString.contains("rol=Operador") )
{
    // return the name of the response you want to dispatch
    return "Sueldo operador"
}
else if( queryString.contains("rol=Supervisor") )
{
    // return the name of the response you want to dispatch
    return "Sueldo supervisor"
}

/*

// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Sueldo operador" id="9cb5ca69-4c16-4247-b348-d4b42659acd3" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"salario" : 5000
}
</con:responseContent></con:response><con:response name="Sueldo supervisor" id="8f843806-44b4-4554-837f-b18db017975d" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"salario" : 8000
}
</con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>